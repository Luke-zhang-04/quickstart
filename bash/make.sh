#!/usr/bin/env bash
# Quickstart | Bootstrap functions
# Copyright (c) 2020 Luke Zhang | https://luke-zhang-04.github.io/ | MIT Licence

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" # Get location of this script
. "${DIR}/colours.sh"

#######################################
# Create makefile
# Globals:
#   none
# Arguments:
#   make: boolean
#   bootstrap: boolean
#   eslint: boolean
#   stylelint: boolean
#   reactApp: boolean
#   typescript: hoolean
#######################################
makeMakefile() {
    if "$1"; then
        printf "\t${IGreen}Makefile requested${Cyan}\n"

        printf "\t\t${IBlue}Initializing makefile...${Cyan}\n"
        printf "# This makefile was auto-generated by Quickstart. You are free to modify it as you please.\n# To find out more about Make, visit https://www.gnu.org/software/make/\n\n" >> makefile
        printf "\t\t${IGreen}Make initialized...${Cyan}\n"

        printf "\t\t${IBlue}Checking for Bootstrap...${Cyan}\n"
        if "$2"; then
            printf "\t\t\t${IGreen}Bootstrap found${Cyan}\n"
            printf "\t\t\t${IBlue}Creating new make commands sass and sass-min...${Cyan}\n\t\t\t"
            printf "sass:\n\tsass ./scss/bootstrap.scss ./public/css/styles.css\n\nsass-min:\n\tsass ./scss/bootstrap.scss ./public/css/styles.css --style compressed\n" >> makefile # Make sass compiling make commands
            make # Compile sass as-is
            printf "\t\t\t${IGreen}Succesfully created make commands for Bootstrap SASS compiling${Cyan}\n"
        else
            printf "\t\t\t${IYellow}Bootstrap not found${Cyan}\n"
        fi

        printf "\t\t${IBlue}Checking for Eslint and Stylelint...${Cyan}\n"
        if "$3"&&"$4"; then
            printf "\t\t\t${IGreen}Eslint and Stylelint found${Cyan}\n"
            printf "\t\t\t${IBlue}Creating new make commands lint and lint-fix...${Cyan}\n\t\t\t"
            printf "\nlint:\n\tnpx eslint \"*/**/*.{js,jsx,ts,tsx}\"\n\tnpx stylelint \"*/**/*.{scss,css}\"\n\nlint-fix:\n\tnpx eslint \"*/**/*.{js,jsx,ts,tsx}\" --fix\n\tnpx stylelint \"*/**/*.{scss,css}\" --fix\n" >> makefile # Make lint and lint fix make commands
            make lint-fix # Run lint-fix as is
            printf "\t\t\t${IGreen}Succesfully created make commands for Eslint and Stylelint${Cyan}\n"
        elif "$3"; then
            printf "\t\t\t${IYellow}Stylelint not found${Cyan}\n"
            printf "\t\t\t${IGreen}Eslint found${Cyan}\n"
            printf "\t\t\t${IBlue}Creating new make commands lint and lint-fix...${Cyan}\n\t\t\t"
            printf "\nlint:\n\tnpx eslint \"*/**/*.{js,jsx,ts,tsx}\"\n\nlint-fix:\n\tnpx eslint \"*/**/*.{js,jsx,ts,tsx}\" --fix\n" >> makefile # Make lint and lint fix make commands
            make lint-fix # Run lint-fix as is
            printf "\t\t\t${IGreen}Succesfully created make commands for Eslint${Cyan}\n"
        elif "$4"; then
            printf "\t\t\t${IYellow}Eslint not found${Cyan}\n"
            printf "\t\t\t${IGreen}Stylelint found${Cyan}\n"
            printf "\t\t\t${IBlue}Creating new make commands lint and lint-fix...${Cyan}\n\t\t\t"
            printf "\nlint:\n\tnpx stylelint \"*/**/*.scss\"\n\nlint-fix:\n\tnpx stylelint \"*/**/*.scss\" --fix\n" >> makefile # Make lint and lint fix make commands
            make lint-fix # Run lint-fix as is
            printf "\t\t\t${IGreen}Succesfully created make commands for Stylelint${Cyan}\n"
        else
            printf "\t\t${IYellow}Neither Eslint nor Stylelint were found${Cyan}\n"
        fi

        printf "\t\t${IBlue}Checking for standalone Typescript...${Cyan}\n"
        if !"$5"&&"$6"; then 
            printf "\ntsc:\n\tnpx tsc -p .\n" >> makefile # Make tsc shorthand
        fi

        
        printf "${IGreen}Make commands created and executed!${Cyan}\n"
    else
        printf "\t${IYellow}Makefile not requested${Cyan}\n"
    fi
}